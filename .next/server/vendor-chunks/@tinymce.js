"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tinymce";
exports.ids = ["vendor-chunks/@tinymce"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/ScriptLoader2.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/ScriptLoader2.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScriptLoader = void 0;\nvar Utils_1 = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/Utils.js\");\nvar injectScriptTag = function (doc, item, handler) {\n    var _a, _b;\n    var scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.id = item.id;\n    scriptTag.src = item.src;\n    scriptTag.async = (_a = item.async) !== null && _a !== void 0 ? _a : false;\n    scriptTag.defer = (_b = item.defer) !== null && _b !== void 0 ? _b : false;\n    var loadHandler = function () {\n        scriptTag.removeEventListener('load', loadHandler);\n        scriptTag.removeEventListener('error', errorHandler);\n        handler(item.src);\n    };\n    var errorHandler = function (err) {\n        scriptTag.removeEventListener('load', loadHandler);\n        scriptTag.removeEventListener('error', errorHandler);\n        handler(item.src, err);\n    };\n    scriptTag.addEventListener('load', loadHandler);\n    scriptTag.addEventListener('error', errorHandler);\n    if (doc.head) {\n        doc.head.appendChild(scriptTag);\n    }\n};\nvar createDocumentScriptLoader = function (doc) {\n    var lookup = {};\n    var scriptLoadOrErrorHandler = function (src, err) {\n        var item = lookup[src];\n        item.done = true;\n        item.error = err;\n        for (var _i = 0, _a = item.handlers; _i < _a.length; _i++) {\n            var h = _a[_i];\n            h(src, err);\n        }\n        item.handlers = [];\n    };\n    var loadScripts = function (items, success, failure) {\n        // eslint-disable-next-line no-console\n        var failureOrLog = function (err) { return failure !== undefined ? failure(err) : console.error(err); };\n        if (items.length === 0) {\n            failureOrLog(new Error('At least one script must be provided'));\n            return;\n        }\n        var successCount = 0;\n        var failed = false;\n        var loaded = function (_src, err) {\n            if (failed) {\n                return;\n            }\n            if (err) {\n                failed = true;\n                failureOrLog(err);\n            }\n            else if (++successCount === items.length) {\n                success();\n            }\n        };\n        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n            var item = items_1[_i];\n            var existing = lookup[item.src];\n            if (existing) {\n                if (existing.done) {\n                    loaded(item.src, existing.error);\n                }\n                else {\n                    existing.handlers.push(loaded);\n                }\n            }\n            else {\n                // create a new entry\n                var id = (0, Utils_1.uuid)('tiny-');\n                lookup[item.src] = {\n                    id: id,\n                    src: item.src,\n                    done: false,\n                    error: null,\n                    handlers: [loaded],\n                };\n                injectScriptTag(doc, __assign({ id: id }, item), scriptLoadOrErrorHandler);\n            }\n        }\n    };\n    var deleteScripts = function () {\n        var _a;\n        for (var _i = 0, _b = Object.values(lookup); _i < _b.length; _i++) {\n            var item = _b[_i];\n            var scriptTag = doc.getElementById(item.id);\n            if (scriptTag != null && scriptTag.tagName === 'SCRIPT') {\n                (_a = scriptTag.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(scriptTag);\n            }\n        }\n        lookup = {};\n    };\n    var getDocument = function () { return doc; };\n    return {\n        loadScripts: loadScripts,\n        deleteScripts: deleteScripts,\n        getDocument: getDocument\n    };\n};\nvar createScriptLoader = function () {\n    var cache = [];\n    var getDocumentScriptLoader = function (doc) {\n        var loader = cache.find(function (l) { return l.getDocument() === doc; });\n        if (loader === undefined) {\n            loader = createDocumentScriptLoader(doc);\n            cache.push(loader);\n        }\n        return loader;\n    };\n    var loadList = function (doc, items, delay, success, failure) {\n        var doLoad = function () { return getDocumentScriptLoader(doc).loadScripts(items, success, failure); };\n        if (delay > 0) {\n            setTimeout(doLoad, delay);\n        }\n        else {\n            doLoad();\n        }\n    };\n    var reinitialize = function () {\n        for (var loader = cache.pop(); loader != null; loader = cache.pop()) {\n            loader.deleteScripts();\n        }\n    };\n    return {\n        loadList: loadList,\n        reinitialize: reinitialize\n    };\n};\nexports.ScriptLoader = createScriptLoader();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/ScriptLoader2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/TinyMCE.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/TinyMCE.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTinymce = void 0;\nvar getTinymce = function (view) {\n    var global = view;\n    return global && global.tinymce ? global.tinymce : null;\n};\nexports.getTinymce = getTinymce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvY2pzL21haW4vdHMvVGlueU1DRS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdGlueW1jZS90aW55bWNlLXJlYWN0L2xpYi9janMvbWFpbi90cy9UaW55TUNFLmpzP2UzYzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFRpbnltY2UgPSB2b2lkIDA7XG52YXIgZ2V0VGlueW1jZSA9IGZ1bmN0aW9uICh2aWV3KSB7XG4gICAgdmFyIGdsb2JhbCA9IHZpZXc7XG4gICAgcmV0dXJuIGdsb2JhbCAmJiBnbG9iYWwudGlueW1jZSA/IGdsb2JhbC50aW55bWNlIDogbnVsbDtcbn07XG5leHBvcnRzLmdldFRpbnltY2UgPSBnZXRUaW55bWNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/TinyMCE.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/Utils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/Utils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setMode = exports.isInDoc = exports.isBeforeInputEventAvailable = exports.mergePlugins = exports.isTextareaOrInput = exports.uuid = exports.configHandlers = exports.configHandlers2 = exports.isFunction = void 0;\nvar EditorPropTypes_1 = __webpack_require__(/*! ./components/EditorPropTypes */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/EditorPropTypes.js\");\nvar isFunction = function (x) { return typeof x === 'function'; };\nexports.isFunction = isFunction;\nvar isEventProp = function (name) { return name in EditorPropTypes_1.eventPropTypes; };\nvar eventAttrToEventName = function (attrName) { return attrName.substr(2); };\nvar configHandlers2 = function (handlerLookup, on, off, adapter, prevProps, props, boundHandlers) {\n    var prevEventKeys = Object.keys(prevProps).filter(isEventProp);\n    var currEventKeys = Object.keys(props).filter(isEventProp);\n    var removedKeys = prevEventKeys.filter(function (key) { return props[key] === undefined; });\n    var addedKeys = currEventKeys.filter(function (key) { return prevProps[key] === undefined; });\n    removedKeys.forEach(function (key) {\n        // remove event handler\n        var eventName = eventAttrToEventName(key);\n        var wrappedHandler = boundHandlers[eventName];\n        off(eventName, wrappedHandler);\n        delete boundHandlers[eventName];\n    });\n    addedKeys.forEach(function (key) {\n        var wrappedHandler = adapter(handlerLookup, key);\n        var eventName = eventAttrToEventName(key);\n        boundHandlers[eventName] = wrappedHandler;\n        on(eventName, wrappedHandler);\n    });\n};\nexports.configHandlers2 = configHandlers2;\nvar configHandlers = function (editor, prevProps, props, boundHandlers, lookup) {\n    return (0, exports.configHandlers2)(lookup, editor.on.bind(editor), editor.off.bind(editor), \n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    function (handlerLookup, key) { return function (e) { var _a; return (_a = handlerLookup(key)) === null || _a === void 0 ? void 0 : _a(e, editor); }; }, prevProps, props, boundHandlers);\n};\nexports.configHandlers = configHandlers;\nvar unique = 0;\nvar uuid = function (prefix) {\n    var time = Date.now();\n    var random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nexports.uuid = uuid;\nvar isTextareaOrInput = function (element) {\n    return element !== null && (element.tagName.toLowerCase() === 'textarea' || element.tagName.toLowerCase() === 'input');\n};\nexports.isTextareaOrInput = isTextareaOrInput;\nvar normalizePluginArray = function (plugins) {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\n// eslint-disable-next-line max-len\nvar mergePlugins = function (initPlugins, inputPlugins) { return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins)); };\nexports.mergePlugins = mergePlugins;\nvar isBeforeInputEventAvailable = function () { return window.InputEvent && typeof InputEvent.prototype.getTargetRanges === 'function'; };\nexports.isBeforeInputEventAvailable = isBeforeInputEventAvailable;\nvar isInDoc = function (elem) {\n    if (!('isConnected' in Node.prototype)) {\n        // Fallback for IE and old Edge\n        var current = elem;\n        var parent_1 = elem.parentNode;\n        while (parent_1 != null) {\n            current = parent_1;\n            parent_1 = current.parentNode;\n        }\n        return current === elem.ownerDocument;\n    }\n    return elem.isConnected;\n};\nexports.isInDoc = isInDoc;\nvar setMode = function (editor, mode) {\n    if (editor !== undefined) {\n        if (editor.mode != null && typeof editor.mode === 'object' && typeof editor.mode.set === 'function') {\n            editor.mode.set(mode);\n        }\n        else { // support TinyMCE 4\n            editor.setMode(mode);\n        }\n    }\n};\nexports.setMode = setMode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvY2pzL21haW4vdHMvVXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGVBQWUsR0FBRyxtQ0FBbUMsR0FBRyxvQkFBb0IsR0FBRyx5QkFBeUIsR0FBRyxZQUFZLEdBQUcsc0JBQXNCLEdBQUcsdUJBQXVCLEdBQUcsa0JBQWtCO0FBQ2pOLHdCQUF3QixtQkFBTyxDQUFDLCtIQUE4QjtBQUM5RCxnQ0FBZ0M7QUFDaEMsa0JBQWtCO0FBQ2xCLG9DQUFvQztBQUNwQyxpREFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsNERBQTRELGtDQUFrQztBQUM5RiwwREFBMEQsc0NBQXNDO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxzQkFBc0IsUUFBUSx5RkFBeUY7QUFDM0o7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBEO0FBQzFELG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvY2pzL21haW4vdHMvVXRpbHMuanM/NjMyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0TW9kZSA9IGV4cG9ydHMuaXNJbkRvYyA9IGV4cG9ydHMuaXNCZWZvcmVJbnB1dEV2ZW50QXZhaWxhYmxlID0gZXhwb3J0cy5tZXJnZVBsdWdpbnMgPSBleHBvcnRzLmlzVGV4dGFyZWFPcklucHV0ID0gZXhwb3J0cy51dWlkID0gZXhwb3J0cy5jb25maWdIYW5kbGVycyA9IGV4cG9ydHMuY29uZmlnSGFuZGxlcnMyID0gZXhwb3J0cy5pc0Z1bmN0aW9uID0gdm9pZCAwO1xudmFyIEVkaXRvclByb3BUeXBlc18xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9FZGl0b3JQcm9wVHlwZXNcIik7XG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uICh4KSB7IHJldHVybiB0eXBlb2YgeCA9PT0gJ2Z1bmN0aW9uJzsgfTtcbmV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG52YXIgaXNFdmVudFByb3AgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gbmFtZSBpbiBFZGl0b3JQcm9wVHlwZXNfMS5ldmVudFByb3BUeXBlczsgfTtcbnZhciBldmVudEF0dHJUb0V2ZW50TmFtZSA9IGZ1bmN0aW9uIChhdHRyTmFtZSkgeyByZXR1cm4gYXR0ck5hbWUuc3Vic3RyKDIpOyB9O1xudmFyIGNvbmZpZ0hhbmRsZXJzMiA9IGZ1bmN0aW9uIChoYW5kbGVyTG9va3VwLCBvbiwgb2ZmLCBhZGFwdGVyLCBwcmV2UHJvcHMsIHByb3BzLCBib3VuZEhhbmRsZXJzKSB7XG4gICAgdmFyIHByZXZFdmVudEtleXMgPSBPYmplY3Qua2V5cyhwcmV2UHJvcHMpLmZpbHRlcihpc0V2ZW50UHJvcCk7XG4gICAgdmFyIGN1cnJFdmVudEtleXMgPSBPYmplY3Qua2V5cyhwcm9wcykuZmlsdGVyKGlzRXZlbnRQcm9wKTtcbiAgICB2YXIgcmVtb3ZlZEtleXMgPSBwcmV2RXZlbnRLZXlzLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBwcm9wc1trZXldID09PSB1bmRlZmluZWQ7IH0pO1xuICAgIHZhciBhZGRlZEtleXMgPSBjdXJyRXZlbnRLZXlzLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBwcmV2UHJvcHNba2V5XSA9PT0gdW5kZWZpbmVkOyB9KTtcbiAgICByZW1vdmVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGV2ZW50IGhhbmRsZXJcbiAgICAgICAgdmFyIGV2ZW50TmFtZSA9IGV2ZW50QXR0clRvRXZlbnROYW1lKGtleSk7XG4gICAgICAgIHZhciB3cmFwcGVkSGFuZGxlciA9IGJvdW5kSGFuZGxlcnNbZXZlbnROYW1lXTtcbiAgICAgICAgb2ZmKGV2ZW50TmFtZSwgd3JhcHBlZEhhbmRsZXIpO1xuICAgICAgICBkZWxldGUgYm91bmRIYW5kbGVyc1tldmVudE5hbWVdO1xuICAgIH0pO1xuICAgIGFkZGVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHdyYXBwZWRIYW5kbGVyID0gYWRhcHRlcihoYW5kbGVyTG9va3VwLCBrZXkpO1xuICAgICAgICB2YXIgZXZlbnROYW1lID0gZXZlbnRBdHRyVG9FdmVudE5hbWUoa2V5KTtcbiAgICAgICAgYm91bmRIYW5kbGVyc1tldmVudE5hbWVdID0gd3JhcHBlZEhhbmRsZXI7XG4gICAgICAgIG9uKGV2ZW50TmFtZSwgd3JhcHBlZEhhbmRsZXIpO1xuICAgIH0pO1xufTtcbmV4cG9ydHMuY29uZmlnSGFuZGxlcnMyID0gY29uZmlnSGFuZGxlcnMyO1xudmFyIGNvbmZpZ0hhbmRsZXJzID0gZnVuY3Rpb24gKGVkaXRvciwgcHJldlByb3BzLCBwcm9wcywgYm91bmRIYW5kbGVycywgbG9va3VwKSB7XG4gICAgcmV0dXJuICgwLCBleHBvcnRzLmNvbmZpZ0hhbmRsZXJzMikobG9va3VwLCBlZGl0b3Iub24uYmluZChlZGl0b3IpLCBlZGl0b3Iub2ZmLmJpbmQoZWRpdG9yKSwgXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnRcbiAgICBmdW5jdGlvbiAoaGFuZGxlckxvb2t1cCwga2V5KSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyB2YXIgX2E7IHJldHVybiAoX2EgPSBoYW5kbGVyTG9va3VwKGtleSkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYShlLCBlZGl0b3IpOyB9OyB9LCBwcmV2UHJvcHMsIHByb3BzLCBib3VuZEhhbmRsZXJzKTtcbn07XG5leHBvcnRzLmNvbmZpZ0hhbmRsZXJzID0gY29uZmlnSGFuZGxlcnM7XG52YXIgdW5pcXVlID0gMDtcbnZhciB1dWlkID0gZnVuY3Rpb24gKHByZWZpeCkge1xuICAgIHZhciB0aW1lID0gRGF0ZS5ub3coKTtcbiAgICB2YXIgcmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMCk7XG4gICAgdW5pcXVlKys7XG4gICAgcmV0dXJuIHByZWZpeCArICdfJyArIHJhbmRvbSArIHVuaXF1ZSArIFN0cmluZyh0aW1lKTtcbn07XG5leHBvcnRzLnV1aWQgPSB1dWlkO1xudmFyIGlzVGV4dGFyZWFPcklucHV0ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudCAhPT0gbnVsbCAmJiAoZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICd0ZXh0YXJlYScgfHwgZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdpbnB1dCcpO1xufTtcbmV4cG9ydHMuaXNUZXh0YXJlYU9ySW5wdXQgPSBpc1RleHRhcmVhT3JJbnB1dDtcbnZhciBub3JtYWxpemVQbHVnaW5BcnJheSA9IGZ1bmN0aW9uIChwbHVnaW5zKSB7XG4gICAgaWYgKHR5cGVvZiBwbHVnaW5zID09PSAndW5kZWZpbmVkJyB8fCBwbHVnaW5zID09PSAnJykge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHBsdWdpbnMpID8gcGx1Z2lucyA6IHBsdWdpbnMuc3BsaXQoJyAnKTtcbn07XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlblxudmFyIG1lcmdlUGx1Z2lucyA9IGZ1bmN0aW9uIChpbml0UGx1Z2lucywgaW5wdXRQbHVnaW5zKSB7IHJldHVybiBub3JtYWxpemVQbHVnaW5BcnJheShpbml0UGx1Z2lucykuY29uY2F0KG5vcm1hbGl6ZVBsdWdpbkFycmF5KGlucHV0UGx1Z2lucykpOyB9O1xuZXhwb3J0cy5tZXJnZVBsdWdpbnMgPSBtZXJnZVBsdWdpbnM7XG52YXIgaXNCZWZvcmVJbnB1dEV2ZW50QXZhaWxhYmxlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gd2luZG93LklucHV0RXZlbnQgJiYgdHlwZW9mIElucHV0RXZlbnQucHJvdG90eXBlLmdldFRhcmdldFJhbmdlcyA9PT0gJ2Z1bmN0aW9uJzsgfTtcbmV4cG9ydHMuaXNCZWZvcmVJbnB1dEV2ZW50QXZhaWxhYmxlID0gaXNCZWZvcmVJbnB1dEV2ZW50QXZhaWxhYmxlO1xudmFyIGlzSW5Eb2MgPSBmdW5jdGlvbiAoZWxlbSkge1xuICAgIGlmICghKCdpc0Nvbm5lY3RlZCcgaW4gTm9kZS5wcm90b3R5cGUpKSB7XG4gICAgICAgIC8vIEZhbGxiYWNrIGZvciBJRSBhbmQgb2xkIEVkZ2VcbiAgICAgICAgdmFyIGN1cnJlbnQgPSBlbGVtO1xuICAgICAgICB2YXIgcGFyZW50XzEgPSBlbGVtLnBhcmVudE5vZGU7XG4gICAgICAgIHdoaWxlIChwYXJlbnRfMSAhPSBudWxsKSB7XG4gICAgICAgICAgICBjdXJyZW50ID0gcGFyZW50XzE7XG4gICAgICAgICAgICBwYXJlbnRfMSA9IGN1cnJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY3VycmVudCA9PT0gZWxlbS5vd25lckRvY3VtZW50O1xuICAgIH1cbiAgICByZXR1cm4gZWxlbS5pc0Nvbm5lY3RlZDtcbn07XG5leHBvcnRzLmlzSW5Eb2MgPSBpc0luRG9jO1xudmFyIHNldE1vZGUgPSBmdW5jdGlvbiAoZWRpdG9yLCBtb2RlKSB7XG4gICAgaWYgKGVkaXRvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChlZGl0b3IubW9kZSAhPSBudWxsICYmIHR5cGVvZiBlZGl0b3IubW9kZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGVkaXRvci5tb2RlLnNldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgZWRpdG9yLm1vZGUuc2V0KG1vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgeyAvLyBzdXBwb3J0IFRpbnlNQ0UgNFxuICAgICAgICAgICAgZWRpdG9yLnNldE1vZGUobW9kZSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuZXhwb3J0cy5zZXRNb2RlID0gc2V0TW9kZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/Editor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/Editor.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Editor = void 0;\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar ScriptLoader2_1 = __webpack_require__(/*! ../ScriptLoader2 */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/ScriptLoader2.js\");\nvar TinyMCE_1 = __webpack_require__(/*! ../TinyMCE */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/TinyMCE.js\");\nvar Utils_1 = __webpack_require__(/*! ../Utils */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/Utils.js\");\nvar EditorPropTypes_1 = __webpack_require__(/*! ./EditorPropTypes */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/EditorPropTypes.js\");\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor(props) {\n        var _this = this;\n        var _a, _b, _c;\n        _this = _super.call(this, props) || this;\n        _this.rollbackTimer = undefined;\n        _this.valueCursor = undefined;\n        _this.rollbackChange = function () {\n            var editor = _this.editor;\n            var value = _this.props.value;\n            if (editor && value && value !== _this.currentContent) {\n                editor.undoManager.ignore(function () {\n                    editor.setContent(value);\n                    // only restore cursor on inline editors when they are focused\n                    // as otherwise it will cause a focus grab\n                    if (_this.valueCursor && (!_this.inline || editor.hasFocus())) {\n                        try {\n                            editor.selection.moveToBookmark(_this.valueCursor);\n                        }\n                        catch (e) { /* ignore */ }\n                    }\n                });\n            }\n            _this.rollbackTimer = undefined;\n        };\n        _this.handleBeforeInput = function (_evt) {\n            if (_this.props.value !== undefined && _this.props.value === _this.currentContent && _this.editor) {\n                if (!_this.inline || _this.editor.hasFocus()) {\n                    try {\n                        // getBookmark throws exceptions when the editor has not been focused\n                        // possibly only in inline mode but I'm not taking chances\n                        _this.valueCursor = _this.editor.selection.getBookmark(3);\n                    }\n                    catch (e) { /* ignore */ }\n                }\n            }\n        };\n        _this.handleBeforeInputSpecial = function (evt) {\n            if (evt.key === 'Enter' || evt.key === 'Backspace' || evt.key === 'Delete') {\n                _this.handleBeforeInput(evt);\n            }\n        };\n        _this.handleEditorChange = function (_evt) {\n            var editor = _this.editor;\n            if (editor && editor.initialized) {\n                var newContent = editor.getContent();\n                if (_this.props.value !== undefined && _this.props.value !== newContent && _this.props.rollback !== false) {\n                    // start a timer and revert to the value if not applied in time\n                    if (!_this.rollbackTimer) {\n                        _this.rollbackTimer = window.setTimeout(_this.rollbackChange, typeof _this.props.rollback === 'number' ? _this.props.rollback : 200);\n                    }\n                }\n                if (newContent !== _this.currentContent) {\n                    _this.currentContent = newContent;\n                    if ((0, Utils_1.isFunction)(_this.props.onEditorChange)) {\n                        _this.props.onEditorChange(newContent, editor);\n                    }\n                }\n            }\n        };\n        _this.handleEditorChangeSpecial = function (evt) {\n            if (evt.key === 'Backspace' || evt.key === 'Delete') {\n                _this.handleEditorChange(evt);\n            }\n        };\n        _this.initialise = function (attempts) {\n            var _a, _b, _c;\n            if (attempts === void 0) { attempts = 0; }\n            var target = _this.elementRef.current;\n            if (!target) {\n                return; // Editor has been unmounted\n            }\n            if (!(0, Utils_1.isInDoc)(target)) {\n                // this is probably someone trying to help by rendering us offscreen\n                // but we can't do that because the editor iframe must be in the document\n                // in order to have state\n                if (attempts === 0) {\n                    // we probably just need to wait for the current events to be processed\n                    setTimeout(function () { return _this.initialise(1); }, 1);\n                }\n                else if (attempts < 100) {\n                    // wait for ten seconds, polling every tenth of a second\n                    setTimeout(function () { return _this.initialise(attempts + 1); }, 100);\n                }\n                else {\n                    // give up, at this point it seems that more polling is unlikely to help\n                    throw new Error('tinymce can only be initialised when in a document');\n                }\n                return;\n            }\n            var tinymce = (0, TinyMCE_1.getTinymce)(_this.view);\n            if (!tinymce) {\n                throw new Error('tinymce should have been loaded into global scope');\n            }\n            var finalInit = __assign(__assign({}, _this.props.init), { selector: undefined, target: target, readonly: _this.props.disabled, inline: _this.inline, plugins: (0, Utils_1.mergePlugins)((_a = _this.props.init) === null || _a === void 0 ? void 0 : _a.plugins, _this.props.plugins), toolbar: (_b = _this.props.toolbar) !== null && _b !== void 0 ? _b : (_c = _this.props.init) === null || _c === void 0 ? void 0 : _c.toolbar, setup: function (editor) {\n                    _this.editor = editor;\n                    _this.bindHandlers({});\n                    // When running in inline mode the editor gets the initial value\n                    // from the innerHTML of the element it is initialized on.\n                    // However we don't want to take on the responsibility of sanitizing\n                    // to remove XSS in the react integration so we have a chicken and egg\n                    // problem... We avoid it by sneaking in a set content before the first\n                    // \"official\" setContent and using TinyMCE to do the sanitization.\n                    if (_this.inline && !(0, Utils_1.isTextareaOrInput)(target)) {\n                        editor.once('PostRender', function (_evt) {\n                            editor.setContent(_this.getInitialValue(), { no_events: true });\n                        });\n                    }\n                    if (_this.props.init && (0, Utils_1.isFunction)(_this.props.init.setup)) {\n                        _this.props.init.setup(editor);\n                    }\n                }, init_instance_callback: function (editor) {\n                    var _a, _b;\n                    // check for changes that happened since tinymce.init() was called\n                    var initialValue = _this.getInitialValue();\n                    _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n                    if (_this.currentContent !== initialValue) {\n                        _this.currentContent = initialValue;\n                        // same as resetContent in TinyMCE 5\n                        editor.setContent(initialValue);\n                        editor.undoManager.clear();\n                        editor.undoManager.add();\n                        editor.setDirty(false);\n                    }\n                    var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    (0, Utils_1.setMode)(_this.editor, disabled ? 'readonly' : 'design');\n                    // ensure existing init_instance_callback is called\n                    if (_this.props.init && (0, Utils_1.isFunction)(_this.props.init.init_instance_callback)) {\n                        _this.props.init.init_instance_callback(editor);\n                    }\n                } });\n            if (!_this.inline) {\n                target.style.visibility = '';\n            }\n            if ((0, Utils_1.isTextareaOrInput)(target)) {\n                target.value = _this.getInitialValue();\n            }\n            tinymce.init(finalInit);\n        };\n        _this.id = _this.props.id || (0, Utils_1.uuid)('tiny-react');\n        _this.elementRef = React.createRef();\n        _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n        _this.boundHandlers = {};\n        return _this;\n    }\n    Object.defineProperty(Editor.prototype, \"view\", {\n        get: function () {\n            var _a, _b;\n            return (_b = (_a = this.elementRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.defaultView) !== null && _b !== void 0 ? _b : window;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Editor.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        var _a, _b;\n        if (this.rollbackTimer) {\n            clearTimeout(this.rollbackTimer);\n            this.rollbackTimer = undefined;\n        }\n        if (this.editor) {\n            this.bindHandlers(prevProps);\n            if (this.editor.initialized) {\n                this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n                if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n                    // same as resetContent in TinyMCE 5\n                    this.editor.setContent(this.props.initialValue);\n                    this.editor.undoManager.clear();\n                    this.editor.undoManager.add();\n                    this.editor.setDirty(false);\n                }\n                else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n                    var localEditor_1 = this.editor;\n                    localEditor_1.undoManager.transact(function () {\n                        // inline editors grab focus when restoring selection\n                        // so we don't try to keep their selection unless they are currently focused\n                        var cursor;\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            try {\n                                // getBookmark throws exceptions when the editor has not been focused\n                                // possibly only in inline mode but I'm not taking chances\n                                cursor = localEditor_1.selection.getBookmark(3);\n                            }\n                            catch (e) { /* ignore */ }\n                        }\n                        var valueCursor = _this.valueCursor;\n                        localEditor_1.setContent(_this.props.value);\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            for (var _i = 0, _a = [cursor, valueCursor]; _i < _a.length; _i++) {\n                                var bookmark = _a[_i];\n                                if (bookmark) {\n                                    try {\n                                        localEditor_1.selection.moveToBookmark(bookmark);\n                                        _this.valueCursor = bookmark;\n                                        break;\n                                    }\n                                    catch (e) { /* ignore */ }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this.props.disabled !== prevProps.disabled) {\n                    var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    (0, Utils_1.setMode)(this.editor, disabled ? 'readonly' : 'design');\n                }\n            }\n        }\n    };\n    Editor.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        if ((0, TinyMCE_1.getTinymce)(this.view) !== null) {\n            this.initialise();\n        }\n        else if (Array.isArray(this.props.tinymceScriptSrc) && this.props.tinymceScriptSrc.length === 0) {\n            (_b = (_a = this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, new Error('No `tinymce` global is present but the `tinymceScriptSrc` prop was an empty array.'));\n        }\n        else if ((_c = this.elementRef.current) === null || _c === void 0 ? void 0 : _c.ownerDocument) {\n            var successHandler = function () {\n                var _a, _b;\n                (_b = (_a = _this.props).onScriptsLoad) === null || _b === void 0 ? void 0 : _b.call(_a);\n                _this.initialise();\n            };\n            var errorHandler = function (err) {\n                var _a, _b;\n                (_b = (_a = _this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n            };\n            ScriptLoader2_1.ScriptLoader.loadList(this.elementRef.current.ownerDocument, this.getScriptSources(), (_e = (_d = this.props.scriptLoading) === null || _d === void 0 ? void 0 : _d.delay) !== null && _e !== void 0 ? _e : 0, successHandler, errorHandler);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function () {\n        var _this = this;\n        var editor = this.editor;\n        if (editor) {\n            editor.off(this.changeEvents(), this.handleEditorChange);\n            editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n            editor.off('keypress', this.handleEditorChangeSpecial);\n            editor.off('keydown', this.handleBeforeInputSpecial);\n            editor.off('NewBlock', this.handleEditorChange);\n            Object.keys(this.boundHandlers).forEach(function (eventName) {\n                editor.off(eventName, _this.boundHandlers[eventName]);\n            });\n            this.boundHandlers = {};\n            editor.remove();\n            this.editor = undefined;\n        }\n    };\n    Editor.prototype.render = function () {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.changeEvents = function () {\n        var _a, _b, _c;\n        var isIE = (_c = (_b = (_a = (0, TinyMCE_1.getTinymce)(this.view)) === null || _a === void 0 ? void 0 : _a.Env) === null || _b === void 0 ? void 0 : _b.browser) === null || _c === void 0 ? void 0 : _c.isIE();\n        return (isIE\n            ? 'change keyup compositionend setcontent CommentChange'\n            : 'change input compositionend setcontent CommentChange');\n    };\n    Editor.prototype.beforeInputEvent = function () {\n        return (0, Utils_1.isBeforeInputEventAvailable)() ? 'beforeinput SelectionChange' : 'SelectionChange';\n    };\n    Editor.prototype.renderInline = function () {\n        var _a = this.props.tagName, tagName = _a === void 0 ? 'div' : _a;\n        return React.createElement(tagName, {\n            ref: this.elementRef,\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function () {\n        return React.createElement('textarea', {\n            ref: this.elementRef,\n            style: { visibility: 'hidden' },\n            name: this.props.textareaName,\n            id: this.id\n        });\n    };\n    Editor.prototype.getScriptSources = function () {\n        var _a, _b;\n        var async = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async;\n        var defer = (_b = this.props.scriptLoading) === null || _b === void 0 ? void 0 : _b.defer;\n        if (this.props.tinymceScriptSrc !== undefined) {\n            if (typeof this.props.tinymceScriptSrc === 'string') {\n                return [{ src: this.props.tinymceScriptSrc, async: async, defer: defer }];\n            }\n            // multiple scripts can be specified which allows for hybrid mode\n            return this.props.tinymceScriptSrc.map(function (item) {\n                if (typeof item === 'string') {\n                    // async does not make sense for multiple items unless\n                    // they are not dependent (which will be unlikely)\n                    return { src: item, async: async, defer: defer };\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        // fallback to the cloud when the tinymceScriptSrc is not specified\n        var channel = this.props.cloudChannel;\n        var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n        var cloudTinyJs = \"https://cdn.tiny.cloud/1/\".concat(apiKey, \"/tinymce/\").concat(channel, \"/tinymce.min.js\");\n        return [{ src: cloudTinyJs, async: async, defer: defer }];\n    };\n    Editor.prototype.getInitialValue = function () {\n        if (typeof this.props.initialValue === 'string') {\n            return this.props.initialValue;\n        }\n        else if (typeof this.props.value === 'string') {\n            return this.props.value;\n        }\n        else {\n            return '';\n        }\n    };\n    Editor.prototype.bindHandlers = function (prevProps) {\n        var _this = this;\n        if (this.editor !== undefined) {\n            // typescript chokes trying to understand the type of the lookup function\n            (0, Utils_1.configHandlers)(this.editor, prevProps, this.props, this.boundHandlers, function (key) { return _this.props[key]; });\n            // check if we should monitor editor changes\n            var isValueControlled = function (p) { return p.onEditorChange !== undefined || p.value !== undefined; };\n            var wasControlled = isValueControlled(prevProps);\n            var nowControlled = isValueControlled(this.props);\n            if (!wasControlled && nowControlled) {\n                this.editor.on(this.changeEvents(), this.handleEditorChange);\n                this.editor.on(this.beforeInputEvent(), this.handleBeforeInput);\n                this.editor.on('keydown', this.handleBeforeInputSpecial);\n                this.editor.on('keyup', this.handleEditorChangeSpecial);\n                this.editor.on('NewBlock', this.handleEditorChange);\n            }\n            else if (wasControlled && !nowControlled) {\n                this.editor.off(this.changeEvents(), this.handleEditorChange);\n                this.editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n                this.editor.off('keydown', this.handleBeforeInputSpecial);\n                this.editor.off('keyup', this.handleEditorChangeSpecial);\n                this.editor.off('NewBlock', this.handleEditorChange);\n            }\n        }\n    };\n    Editor.propTypes = EditorPropTypes_1.EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: '6'\n    };\n    return Editor;\n}(React.Component));\nexports.Editor = Editor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/Editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/EditorPropTypes.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/EditorPropTypes.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EditorPropTypes = exports.eventPropTypes = void 0;\nvar PropTypes = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\nexports.eventPropTypes = {\n    onActivate: PropTypes.func,\n    onAddUndo: PropTypes.func,\n    onBeforeAddUndo: PropTypes.func,\n    onBeforeExecCommand: PropTypes.func,\n    onBeforeGetContent: PropTypes.func,\n    onBeforeRenderUI: PropTypes.func,\n    onBeforeSetContent: PropTypes.func,\n    onBeforePaste: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onClearUndos: PropTypes.func,\n    onClick: PropTypes.func,\n    onContextMenu: PropTypes.func,\n    onCommentChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onCut: PropTypes.func,\n    onDblclick: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onDirty: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragDrop: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    onDragGesture: PropTypes.func,\n    onDragOver: PropTypes.func,\n    onDrop: PropTypes.func,\n    onExecCommand: PropTypes.func,\n    onFocus: PropTypes.func,\n    onFocusIn: PropTypes.func,\n    onFocusOut: PropTypes.func,\n    onGetContent: PropTypes.func,\n    onHide: PropTypes.func,\n    onInit: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyPress: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onLoadContent: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onNodeChange: PropTypes.func,\n    onObjectResizeStart: PropTypes.func,\n    onObjectResized: PropTypes.func,\n    onObjectSelected: PropTypes.func,\n    onPaste: PropTypes.func,\n    onPostProcess: PropTypes.func,\n    onPostRender: PropTypes.func,\n    onPreProcess: PropTypes.func,\n    onProgressState: PropTypes.func,\n    onRedo: PropTypes.func,\n    onRemove: PropTypes.func,\n    onReset: PropTypes.func,\n    onSaveContent: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onSetAttrib: PropTypes.func,\n    onSetContent: PropTypes.func,\n    onShow: PropTypes.func,\n    onSubmit: PropTypes.func,\n    onUndo: PropTypes.func,\n    onVisualAid: PropTypes.func,\n    onSkinLoadError: PropTypes.func,\n    onThemeLoadError: PropTypes.func,\n    onModelLoadError: PropTypes.func,\n    onPluginLoadError: PropTypes.func,\n    onIconsLoadError: PropTypes.func,\n    onLanguageLoadError: PropTypes.func,\n    onScriptsLoad: PropTypes.func,\n    onScriptsLoadError: PropTypes.func,\n};\nexports.EditorPropTypes = __assign({ apiKey: PropTypes.string, id: PropTypes.string, inline: PropTypes.bool, init: PropTypes.object, initialValue: PropTypes.string, onEditorChange: PropTypes.func, value: PropTypes.string, tagName: PropTypes.string, cloudChannel: PropTypes.string, plugins: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), toolbar: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), disabled: PropTypes.bool, textareaName: PropTypes.string, tinymceScriptSrc: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.arrayOf(PropTypes.shape({\n            src: PropTypes.string,\n            async: PropTypes.bool,\n            defer: PropTypes.bool\n        }))\n    ]), rollback: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([false])]), scriptLoading: PropTypes.shape({\n        async: PropTypes.bool,\n        defer: PropTypes.bool,\n        delay: PropTypes.number\n    }) }, exports.eventPropTypes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvY2pzL21haW4vdHMvY29tcG9uZW50cy9FZGl0b3JQcm9wVHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxzQkFBc0I7QUFDaEQsZ0JBQWdCLG1CQUFPLENBQUMsNERBQVk7QUFDcEMsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixjQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B0aW55bWNlL3RpbnltY2UtcmVhY3QvbGliL2Nqcy9tYWluL3RzL2NvbXBvbmVudHMvRWRpdG9yUHJvcFR5cGVzLmpzPzRkZjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FZGl0b3JQcm9wVHlwZXMgPSBleHBvcnRzLmV2ZW50UHJvcFR5cGVzID0gdm9pZCAwO1xudmFyIFByb3BUeXBlcyA9IHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpO1xuZXhwb3J0cy5ldmVudFByb3BUeXBlcyA9IHtcbiAgICBvbkFjdGl2YXRlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkFkZFVuZG86IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQmVmb3JlQWRkVW5kbzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25CZWZvcmVFeGVjQ29tbWFuZDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25CZWZvcmVHZXRDb250ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkJlZm9yZVJlbmRlclVJOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkJlZm9yZVNldENvbnRlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQmVmb3JlUGFzdGU6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQ2xlYXJVbmRvczogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Db250ZXh0TWVudTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Db21tZW50Q2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkNvcHk6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQ3V0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkRibGNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkRlYWN0aXZhdGU6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uRGlydHk6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uRHJhZzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25EcmFnRHJvcDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25EcmFnRW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkRyYWdHZXN0dXJlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkRyYWdPdmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkRyb3A6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uRXhlY0NvbW1hbmQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uRm9jdXM6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uRm9jdXNJbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Gb2N1c091dDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25HZXRDb250ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkhpZGU6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uSW5pdDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25LZXlEb3duOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbktleVByZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbktleVVwOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkxvYWRDb250ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlRG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Nb3VzZUVudGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlTGVhdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uTW91c2VNb3ZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlT3V0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlT3ZlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Nb3VzZVVwOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk5vZGVDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uT2JqZWN0UmVzaXplU3RhcnQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uT2JqZWN0UmVzaXplZDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25PYmplY3RTZWxlY3RlZDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25QYXN0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Qb3N0UHJvY2VzczogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Qb3N0UmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblByZVByb2Nlc3M6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uUHJvZ3Jlc3NTdGF0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25SZWRvOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblJlbW92ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25SZXNldDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25TYXZlQ29udGVudDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25TZWxlY3Rpb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU2V0QXR0cmliOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblNldENvbnRlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU2hvdzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25TdWJtaXQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uVW5kbzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25WaXN1YWxBaWQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU2tpbkxvYWRFcnJvcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25UaGVtZUxvYWRFcnJvcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Nb2RlbExvYWRFcnJvcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25QbHVnaW5Mb2FkRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uSWNvbnNMb2FkRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uTGFuZ3VhZ2VMb2FkRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU2NyaXB0c0xvYWQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU2NyaXB0c0xvYWRFcnJvcjogUHJvcFR5cGVzLmZ1bmMsXG59O1xuZXhwb3J0cy5FZGl0b3JQcm9wVHlwZXMgPSBfX2Fzc2lnbih7IGFwaUtleTogUHJvcFR5cGVzLnN0cmluZywgaWQ6IFByb3BUeXBlcy5zdHJpbmcsIGlubGluZTogUHJvcFR5cGVzLmJvb2wsIGluaXQ6IFByb3BUeXBlcy5vYmplY3QsIGluaXRpYWxWYWx1ZTogUHJvcFR5cGVzLnN0cmluZywgb25FZGl0b3JDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLCB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZywgdGFnTmFtZTogUHJvcFR5cGVzLnN0cmluZywgY2xvdWRDaGFubmVsOiBQcm9wVHlwZXMuc3RyaW5nLCBwbHVnaW5zOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXldKSwgdG9vbGJhcjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5XSksIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCwgdGV4dGFyZWFOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLCB0aW55bWNlU2NyaXB0U3JjOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksXG4gICAgICAgIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgICAgICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICBhc3luYzogUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgICAgICBkZWZlcjogUHJvcFR5cGVzLmJvb2xcbiAgICAgICAgfSkpXG4gICAgXSksIHJvbGxiYWNrOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMub25lT2YoW2ZhbHNlXSldKSwgc2NyaXB0TG9hZGluZzogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgYXN5bmM6IFByb3BUeXBlcy5ib29sLFxuICAgICAgICBkZWZlcjogUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIGRlbGF5OiBQcm9wVHlwZXMubnVtYmVyXG4gICAgfSkgfSwgZXhwb3J0cy5ldmVudFByb3BUeXBlcyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/EditorPropTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Editor = void 0;\nvar Editor_1 = __webpack_require__(/*! ./components/Editor */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/components/Editor.js\");\nObject.defineProperty(exports, \"Editor\", ({ enumerable: true, get: function () { return Editor_1.Editor; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvY2pzL21haW4vdHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQyw2R0FBcUI7QUFDNUMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvY2pzL21haW4vdHMvaW5kZXguanM/MzFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRWRpdG9yID0gdm9pZCAwO1xudmFyIEVkaXRvcl8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9FZGl0b3JcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJFZGl0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEVkaXRvcl8xLkVkaXRvcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/index.js\n");

/***/ })

};
;